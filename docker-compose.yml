services:
  postgres:
    image: postgres:18-alpine
    container_name: currency_exchange_db
    environment:
      POSTGRES_DB: currency_exchange
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: currency_exchange_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: currency_exchange_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: currency_exchange
      DATABASE_USER: postgres
      DATABASE_PASSWORD: admin123
      APP_DATA_KEY: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BASE_CURRENCIES: ${BASE_CURRENCIES:-USD,EUR,GBP,JPY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/migrations:/app/migrations
    command: sh -c "npm run migrate && npm start"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://localhost:3001
    container_name: currency_exchange_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
